/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.campanhavacina.view;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import br.com.ifba.campanhavacina.controller.CampanhaVacinaIController;
import br.com.ifba.campanhavacina.entity.CampanhaVacinaEntity;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author a1591
 * 
 * View com o objetivo de editar um objeto especifico pelo id
 */

@Component
public class CampanhaVacinaEditar extends javax.swing.JFrame {

    @Autowired
    private CampanhaVacinaIController campanhaVacinaController;
    
    /**
     * Creates new form CursoEditar
     */
    public CampanhaVacinaEditar() {
        initComponents();
        this.setLocationRelativeTo(null); // Centraliza a janela
    }
    
    private GestaoCampanhaVacina listarFrame; // Referência para o frame de listagem
    
    public CampanhaVacinaEditar(GestaoCampanhaVacina listarFrame) {
        initComponents(); // Inicializa os componentes da interface gráfica

        this.listarFrame = listarFrame; // Recebe o frame responsável pela listagem
        
        // Adiciona um listener para detectar o fechamento da janela
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                if (listarFrame != null) {
                    listarFrame.readJTable(); // Atualiza a tabela no frame de listagem
                }
            }
        });

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Fecha esta janela sem encerrar o programa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lableNumeroID = new javax.swing.JLabel();
        textFildID = new javax.swing.JTextField();
        jButtonAtualizarCurso = new javax.swing.JButton();
        dataInicio = new javax.swing.JLabel();
        textFieldDataInicio = new javax.swing.JTextField();
        publicoAlvo = new javax.swing.JLabel();
        textFieldPublicoAlvo = new javax.swing.JTextField();
        nomeDaCampanha = new javax.swing.JLabel();
        textFieldNomeCapanha = new javax.swing.JTextField();
        local = new javax.swing.JLabel();
        textFieldLocalDaAplicacao = new javax.swing.JTextField();
        disponibilidadeVacina = new javax.swing.JLabel();
        checkBoxDisponibilidadeVacina = new javax.swing.JCheckBox();
        dataFim = new javax.swing.JLabel();
        textFieldDataFim = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lableNumeroID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lableNumeroID.setText("Informe o ID para Atualizar:");

        textFildID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButtonAtualizarCurso.setText("Atualizar");
        jButtonAtualizarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarCursoActionPerformed(evt);
            }
        });

        dataInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dataInicio.setText("Data e Hora Inicio:");

        textFieldDataInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        publicoAlvo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        publicoAlvo.setText("Publico Alvo:");

        textFieldPublicoAlvo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        nomeDaCampanha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeDaCampanha.setText("Digite o Nome : ");

        textFieldNomeCapanha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        local.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        local.setText("Local Da Aplicação:");

        textFieldLocalDaAplicacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        disponibilidadeVacina.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        disponibilidadeVacina.setText("Disponibilidade:");

        checkBoxDisponibilidadeVacina.setText("Atividade");
        checkBoxDisponibilidadeVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxDisponibilidadeVacinaActionPerformed(evt);
            }
        });

        dataFim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dataFim.setText("Data e Hora Fim:");

        textFieldDataFim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldDataFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldDataFimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dataFim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldDataFim))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(local)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldLocalDaAplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dataInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldDataInicio))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(publicoAlvo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldPublicoAlvo))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonAtualizarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(disponibilidadeVacina)
                            .addGap(34, 34, 34)
                            .addComponent(checkBoxDisponibilidadeVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomeDaCampanha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldNomeCapanha))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lableNumeroID)
                        .addGap(18, 18, 18)
                        .addComponent(textFildID)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lableNumeroID)
                    .addComponent(textFildID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeDaCampanha)
                    .addComponent(textFieldNomeCapanha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(local)
                    .addComponent(textFieldLocalDaAplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataInicio)
                    .addComponent(textFieldDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataFim)
                    .addComponent(textFieldDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicoAlvo)
                    .addComponent(textFieldPublicoAlvo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disponibilidadeVacina)
                    .addComponent(checkBoxDisponibilidadeVacina))
                .addGap(30, 30, 30)
                .addComponent(jButtonAtualizarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAtualizarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarCursoActionPerformed
        // TODO add your handling code here:
        
        // Verifica se os campos obrigatórios estão preenchidos
        if (textFieldNomeCapanha.getText().isEmpty() || 
            textFieldLocalDaAplicacao.getText().isEmpty() || 
            textFildID.getText().isEmpty()) {

            JOptionPane.showMessageDialog(
                    null, 
                    "PREENCHA TODOS OS CAMPOS\n", 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            // Instancia um objeto de CampanhaVacinaEntity
            CampanhaVacinaEntity campanhaVacinaEntity;

            // Tenta converter o ID para Long
            Long id;
            try {
                id = Long.valueOf(textFildID.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID inválido!\n", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Busca a campanha no banco de dados pelo ID
            campanhaVacinaEntity = campanhaVacinaController.findById(id);

            if (campanhaVacinaEntity != null) {
                // Atualiza os atributos da campanha com os novos valores
                campanhaVacinaEntity.setNome(textFieldNomeCapanha.getText()); // Atualiza o nome
                campanhaVacinaEntity.setLocalVacina(textFieldLocalDaAplicacao.getText()); // Atualiza o local

                // Formato das datas
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"); // Formato da data

                // Verifica e atualiza a data de início
                try {
                    String dataInicioStr = textFieldDataInicio.getText(); // Obtém a string da data
                    campanhaVacinaEntity.setInicioCampanha(LocalDateTime.parse(dataInicioStr, formatter));
                } catch (DateTimeParseException e) {
                    JOptionPane.showMessageDialog(this, "Data de início inválida! Use o formato dd/MM/yyyy HH:mm.", "ERRO", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Verifica e atualiza a data de fim
                try {
                    String dataFinalStr = textFieldDataFim.getText(); // Obtém a string da data
                    campanhaVacinaEntity.setFinalCampanha(LocalDateTime.parse(dataFinalStr, formatter));
                } catch (DateTimeParseException e) {
                    JOptionPane.showMessageDialog(this, "Data de fim inválida! Use o formato dd/MM/yyyy HH:mm.", "ERRO", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                campanhaVacinaEntity.setPublicoAlvo(textFieldPublicoAlvo.getText()); // Atualiza o público alvo
                campanhaVacinaEntity.setDisponibilidade(checkBoxDisponibilidadeVacina.isSelected()); // Atualiza a disponibilidade

                // Salva as alterações no banco de dados
                campanhaVacinaController.update(campanhaVacinaEntity);

                JOptionPane.showMessageDialog(
                        this, 
                        "Editado com Sucesso !\n", 
                        "Sucesso", 
                        JOptionPane.INFORMATION_MESSAGE
                );

            } else {
                JOptionPane.showMessageDialog(
                        this, 
                        "Campanha não encontrada!\n", 
                        "ERRO", 
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_jButtonAtualizarCursoActionPerformed

    private void checkBoxDisponibilidadeVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxDisponibilidadeVacinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxDisponibilidadeVacinaActionPerformed

    private void textFieldDataFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldDataFimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldDataFimActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CampanhaVacinaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CampanhaVacinaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CampanhaVacinaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CampanhaVacinaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                GestaoCampanhaVacina listarFrame = new GestaoCampanhaVacina();
                new CampanhaVacinaEditar(listarFrame).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxDisponibilidadeVacina;
    private javax.swing.JLabel dataFim;
    private javax.swing.JLabel dataInicio;
    private javax.swing.JLabel disponibilidadeVacina;
    private javax.swing.JButton jButtonAtualizarCurso;
    private javax.swing.JLabel lableNumeroID;
    private javax.swing.JLabel local;
    private javax.swing.JLabel nomeDaCampanha;
    private javax.swing.JLabel publicoAlvo;
    private javax.swing.JTextField textFieldDataFim;
    private javax.swing.JTextField textFieldDataInicio;
    private javax.swing.JTextField textFieldLocalDaAplicacao;
    private javax.swing.JTextField textFieldNomeCapanha;
    private javax.swing.JTextField textFieldPublicoAlvo;
    private javax.swing.JTextField textFildID;
    // End of variables declaration//GEN-END:variables
}
