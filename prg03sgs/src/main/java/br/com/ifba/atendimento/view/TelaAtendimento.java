/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atendimento.view;

import br.com.ifba.atendimento.controller.AtendimentoIController;
import br.com.ifba.atendimento.entity.Atendimento;
import jakarta.annotation.PostConstruct;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

/**
 *
 * @author larissa
 */

@Component
public class TelaAtendimento extends javax.swing.JFrame {
    
    @Autowired
    private AtendimentoIController atendimentoController;

    @Autowired
    private ApplicationContext context;

    /**
     * Creates new form TelaAtendimento
     */
    public TelaAtendimento() {
        initComponents();
    }
    
    @PostConstruct
    public void init() {
        carregarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAtendimentos = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        tblAtendimentos = new javax.swing.JTable();
        btnCadastrarAtendimento = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SGS - Tela de atendimentos");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAtendimentos.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblAtendimentos.setText("ATENDIMENTOS");
        getContentPane().add(lblAtendimentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 190, -1));

        tblAtendimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID do atendimento", "Nome do funcionário", "CPF do funcionário", "Nome do paciente", "CPF do paciente", "Tipo de atendimento", "Queixas", "Condição física", "Início", "Término"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblAtendimentos);

        getContentPane().add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1210, 290));

        btnCadastrarAtendimento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCadastrarAtendimento.setText("Cadastrar");
        btnCadastrarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarAtendimentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrarAtendimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 110, 50));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        getContentPane().add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 370, 50));

        setSize(new java.awt.Dimension(1245, 457));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarAtendimentoActionPerformed
        //Abre a janela de cadastro de atendimento ao clicar no botão btnCadastrarAtendimento
        TelaCadastrarAtendimento telaCadastrarAtendimento = context.getBean(TelaCadastrarAtendimento.class);
        telaCadastrarAtendimento.setDefaultCloseOperation(TelaCadastrarAtendimento.DISPOSE_ON_CLOSE);
        telaCadastrarAtendimento.setVisible(true);
    }//GEN-LAST:event_btnCadastrarAtendimentoActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        //Obtém o modelo de dados da tabela (DefaultTableModel) associada ao componente tblListaCurso
        DefaultTableModel tabela = (DefaultTableModel) tblAtendimentos.getModel();
        //Limpa todas as linhas da tabela antes de adicionar os novos resultados da busca
        tabela.setNumRows(0);
        
        //Adiciona as informações dos atendimentos salvos no banco de dados na tabela
        try { 
            for (Atendimento atendimento : atendimentoController.findAll()) {
                
                /*Verifica se o texto digitado no campo de busca (ignorando maiúsculas/minúsculas)
                 *condiz com as informações no banco de dados
                 */
                String s = txtBuscar.getText().toLowerCase();
                if (atendimento.getFuncionario().getNome().toLowerCase().contains(s) 
                    || atendimento.getFuncionario().getCpf().contains(s)
                    || atendimento.getId().toString().contains(s)
                    || atendimento.getPaciente().getCpf().contains(s)
                    || atendimento.getPaciente().getNome().toLowerCase().contains(s))  {
                    
                    //Adiciona uma nova linha na tabela com as informações dos atendimentos
                    tabela.addRow(new Object[]{
                        atendimento.getId(),
                        atendimento.getFuncionario().getNome(),
                        atendimento.getFuncionario().getCpf(),
                        atendimento.getPaciente().getNome(),
                        atendimento.getPaciente().getCpf(),
                        atendimento.getTipoAtendimento(),
                        atendimento.getAnamnese().getQueixas(),
                        atendimento.getAnamnese().getCondicoes(),
                        atendimento.getDataHoraInicio(),
                        atendimento.getDataHoraFim()
                    }); 
                }
            }
        } catch (Exception ErroListar) {
            //Caso ocorra algum erro ao carregar os dados, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(
                    null,
                    "ERRO AO CARREGAR A TABELA\n" + ErroListar,
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE
            );  
        }
           
    }//GEN-LAST:event_txtBuscarKeyReleased

    public void carregarTabela() {
        //Obtém o modelo de dados da tabela (DefaultTableModel) associada ao componente tblListaAtendimento
        DefaultTableModel tabela = (DefaultTableModel) tblAtendimentos.getModel();
        //Limpa todas as linhas da tabela antes de adicionar os novos resultados da busca
        tabela.setNumRows(0);
        
        //Adiciona as informações dos atendimentos salvos no banco de dados na tabela
        try {
            for(Atendimento atendimento : atendimentoController.findAll()) {
                tabela.addRow(new Object[]{
                    atendimento.getId(),
                    atendimento.getFuncionario().getNome(),
                    atendimento.getFuncionario().getCpf(),
                    atendimento.getPaciente().getNome(),
                    atendimento.getPaciente().getCpf(),
                    atendimento.getTipoAtendimento(),
                    atendimento.getAnamnese().getQueixas(),
                    atendimento.getAnamnese().getCondicoes(),
                    atendimento.getDataHoraInicio(),
                    atendimento.getDataHoraFim()
                });
            }   
        } catch(Exception ErroListar) {
            //Caso ocorra algum erro ao carregar os dados, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(
                    null, 
                    "ERRO AO CARREGAR A TABELA\n" + ErroListar, 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAtendimento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrarAtendimento;
    private javax.swing.JLabel lblAtendimentos;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblAtendimentos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
